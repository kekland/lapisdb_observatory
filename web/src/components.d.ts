/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';
import {
  MatchResults,
  RouterHistory,
} from '@stencil/router';

export namespace Components {
  interface AppHome {}
  interface AppRoot {}
  interface DatastoreCard {
    'history': RouterHistory;
    'name': string;
  }
  interface DatastorePage {
    'history': RouterHistory;
    'match': MatchResults;
  }
  interface JsonDisplay {
    'data': Object;
    'depth': number;
    'index': string;
  }
  interface JsonItem {
    'history': RouterHistory;
    'match': MatchResults;
    'object': Object;
  }
  interface JsonKeyPair {
    'index': any;
    'value': any;
  }
}

declare global {


  interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {}
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };

  interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {}
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };

  interface HTMLDatastoreCardElement extends Components.DatastoreCard, HTMLStencilElement {}
  var HTMLDatastoreCardElement: {
    prototype: HTMLDatastoreCardElement;
    new (): HTMLDatastoreCardElement;
  };

  interface HTMLDatastorePageElement extends Components.DatastorePage, HTMLStencilElement {}
  var HTMLDatastorePageElement: {
    prototype: HTMLDatastorePageElement;
    new (): HTMLDatastorePageElement;
  };

  interface HTMLJsonDisplayElement extends Components.JsonDisplay, HTMLStencilElement {}
  var HTMLJsonDisplayElement: {
    prototype: HTMLJsonDisplayElement;
    new (): HTMLJsonDisplayElement;
  };

  interface HTMLJsonItemElement extends Components.JsonItem, HTMLStencilElement {}
  var HTMLJsonItemElement: {
    prototype: HTMLJsonItemElement;
    new (): HTMLJsonItemElement;
  };

  interface HTMLJsonKeyPairElement extends Components.JsonKeyPair, HTMLStencilElement {}
  var HTMLJsonKeyPairElement: {
    prototype: HTMLJsonKeyPairElement;
    new (): HTMLJsonKeyPairElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
    'app-root': HTMLAppRootElement;
    'datastore-card': HTMLDatastoreCardElement;
    'datastore-page': HTMLDatastorePageElement;
    'json-display': HTMLJsonDisplayElement;
    'json-item': HTMLJsonItemElement;
    'json-key-pair': HTMLJsonKeyPairElement;
  }
}

declare namespace LocalJSX {
  interface AppHome extends JSXBase.HTMLAttributes<HTMLAppHomeElement> {}
  interface AppRoot extends JSXBase.HTMLAttributes<HTMLAppRootElement> {}
  interface DatastoreCard extends JSXBase.HTMLAttributes<HTMLDatastoreCardElement> {
    'history'?: RouterHistory;
    'name'?: string;
  }
  interface DatastorePage extends JSXBase.HTMLAttributes<HTMLDatastorePageElement> {
    'history'?: RouterHistory;
    'match'?: MatchResults;
  }
  interface JsonDisplay extends JSXBase.HTMLAttributes<HTMLJsonDisplayElement> {
    'data'?: Object;
    'depth'?: number;
    'index'?: string;
  }
  interface JsonItem extends JSXBase.HTMLAttributes<HTMLJsonItemElement> {
    'history'?: RouterHistory;
    'match'?: MatchResults;
    'object'?: Object;
  }
  interface JsonKeyPair extends JSXBase.HTMLAttributes<HTMLJsonKeyPairElement> {
    'index'?: any;
    'value'?: any;
  }

  interface IntrinsicElements {
    'app-home': AppHome;
    'app-root': AppRoot;
    'datastore-card': DatastoreCard;
    'datastore-page': DatastorePage;
    'json-display': JsonDisplay;
    'json-item': JsonItem;
    'json-key-pair': JsonKeyPair;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


